'use client';

import React from 'react';
import { useContextMenu } from '@/lib/context-menu';
import { isHapticSupported } from '@/lib/context-menu/utils';
import { Reply, Forward, Copy, Pin, Edit, Trash2 } from 'lucide-react';

const sampleMessages = [
    {
        id: 1,
        text: "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞? üòä",
        sender: "–ê–Ω–Ω–∞",
        time: "14:30",
        isOwn: false,
    },
    {
        id: 2,
        text: "–í—Å–µ –æ—Ç–ª–∏—á–Ω–æ, —Å–ø–∞—Å–∏–±–æ! –ê —É —Ç–µ–±—è –∫–∞–∫?",
        sender: "–í—ã",
        time: "14:31",
        isOwn: true,
    },
    {
        id: 3,
        text: "–¢–æ–∂–µ —Ö–æ—Ä–æ—à–æ! –ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ —ç—Ç–æ—Ç –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–∫–∞—Ç üåÖ",
        sender: "–ê–Ω–Ω–∞",
        time: "14:32",
        isOwn: false,
    },
    {
        id: 4,
        text: "–í–∞—É, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ—Ç—Ä—è—Å–∞—é—â–µ! –ì–¥–µ —ç—Ç–æ —Å–Ω—è—Ç–æ?",
        sender: "–í—ã",
        time: "14:33",
        isOwn: true,
    },
    {
        id: 5,
        text: "–ù–∞ –±–µ—Ä–µ–≥—É –ß—ë—Ä–Ω–æ–≥–æ –º–æ—Ä—è –≤ –°–æ—á–∏. –û—á–µ–Ω—å —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ–±—ã–≤–∞—Ç—å —Ç–∞–º! –ú–æ—Ä–µ –ø—Ä–æ—Å—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–µ, –∞ –≤–æ–∑–¥—É—Ö —Ç–∞–∫–æ–π —Å–≤–µ–∂–∏–π...",
        sender: "–ê–Ω–Ω–∞",
        time: "14:34",
        isOwn: false,
    },
    {
        id: 6,
        text: "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–µ–¥—É —Ç—É–¥–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ—Ç–ø—É—Å–∫–µ! üèñÔ∏è",
        sender: "–í—ã",
        time: "14:35",
        isOwn: true,
    },
    {
        id: 7,
        text: "–û—Ç–ª–∏—á–Ω–æ! –ú–æ–≥—É –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å —Ö–æ—Ä–æ—à–∏–µ –º–µ—Å—Ç–∞ –¥–ª—è –æ—Ç–¥—ã—Ö–∞",
        sender: "–ê–Ω–Ω–∞",
        time: "14:36",
        isOwn: false,
    },
    {
        id: 8,
        text: "–≠—Ç–æ –±—ã–ª–æ –±—ã –∑–¥–æ—Ä–æ–≤–æ! üéâ",
        sender: "–í—ã",
        time: "14:37",
        isOwn: true,
    },
    {
        id: 9,
        text: "–ö—Å—Ç–∞—Ç–∏, –Ω–µ –∑–∞–±—É–¥—å –≤–∑—è—Ç—å —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–π –∫—Ä–µ–º - —Å–æ–ª–Ω—Ü–µ —Ç–∞–º –æ—á–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ–µ ‚òÄÔ∏è",
        sender: "–ê–Ω–Ω–∞",
        time: "14:38",
        isOwn: false,
    },
    {
        id: 10,
        text: "–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–≤–µ—Ç! –ë—É–¥—É –ø–æ–º–Ω–∏—Ç—å –æ–± —ç—Ç–æ–º",
        sender: "–í—ã",
        time: "14:39",
        isOwn: true,
    },
    {
        id: 11,
        text: "–ê –µ—â–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –ø–æ—Å–µ—Ç–∏—Ç—å –º–µ—Å—Ç–Ω—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã —Å –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ - –ø—Ä–æ—Å—Ç–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–π –≤–∫—É—Å! ü¶êü¶Äüêü",
        sender: "–ê–Ω–Ω–∞",
        time: "14:40",
        isOwn: false,
    },
    {
        id: 12,
        text: "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–ø—Ä–æ–±—É—é! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤—Å–µ —Å–æ–≤–µ—Ç—ã üòä",
        sender: "–í—ã",
        time: "14:41",
        isOwn: true,
    },
    {
        id: 13,
        text: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –ï—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã - –æ–±—Ä–∞—â–∞–π—Å—è. –£–¥–∞—á–∏ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç–ø—É—Å–∫–∞! ‚úàÔ∏è",
        sender: "–ê–Ω–Ω–∞",
        time: "14:42",
        isOwn: false,
    },
    {
        id: 14,
        text: "–°–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ! –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫ –ø—Ä–æ—à–ª–∞ –ø–æ–µ–∑–¥–∫–∞ üì∏",
        sender: "–í—ã",
        time: "14:43",
        isOwn: true,
    },
    {
        id: 15,
        text: "–ë—É–¥—É –∂–¥–∞—Ç—å! üòä",
        sender: "–ê–Ω–Ω–∞",
        time: "14:44",
        isOwn: false,
    },
];

function ChatMessage({ message }: { message: typeof sampleMessages[0] }) {
    const { longPress } = useContextMenu();

    const actions = [
        {
            id: 'reply',
            label: '–û—Ç–≤–µ—Ç–∏—Ç—å',
            icon: <Reply size={20} />,
            onSelect: () => {
                console.log(`–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ: ${message.text}`);
                alert(`–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞: "${message.text}"`);
            }
        },
        {
            id: 'forward',
            label: '–ü–µ—Ä–µ—Å–ª–∞—Ç—å',
            icon: <Forward size={20} />,
            onSelect: () => {
                console.log(`–ü–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: ${message.text}`);
                alert(`–ü–µ—Ä–µ—Å–ª–∞—Ç—å: "${message.text}"`);
            }
        },
        {
            id: 'copy',
            label: '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å',
            icon: <Copy size={20} />,
            shortcut: 'Cmd+C',
            onSelect: () => {
                navigator.clipboard.writeText(message.text);
                console.log(`–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ: ${message.text}`);
                alert('–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
            }
        },
        {
            id: 'pin',
            label: '–ó–∞–∫—Ä–µ–ø–∏—Ç—å',
            icon: <Pin size={20} />,
            onSelect: () => {
                console.log(`–ó–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: ${message.id}`);
                alert(`–°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ!`);
            }
        },
        {
            id: 'edit',
            label: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
            icon: <Edit size={20} />,
            onSelect: () => {
                console.log(`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: ${message.id}`);
                alert(`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ #${message.id}`);
            }
        },
        {
            id: 'delete',
            label: '–£–¥–∞–ª–∏—Ç—å',
            icon: <Trash2 size={20} />,
            destructive: true,
            onSelect: () => {
                console.log(`–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: ${message.id}`);
                if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ?')) {
                    alert(`–°–æ–æ–±—â–µ–Ω–∏–µ #${message.id} —É–¥–∞–ª–µ–Ω–æ!`);
                }
            }
        },
    ];

    return (
        <div
            {...longPress({
                actions,
                edgeMargin: 12,
                maxMenuHeightVH: 60,
                menuAlignment: message.isOwn ? 'right' : 'left' // –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è - —Å–ø—Ä–∞–≤–∞, —á—É–∂–∏–µ - —Å–ª–µ–≤–∞
            })}
            className={`flex ${message.isOwn ? 'justify-end' : 'justify-start'} mb-4 px-4`}
        >
            <div
                className={`max-w-xs lg:max-w-md px-4 py-3 rounded-2xl shadow-sm ${message.isOwn
                    ? 'bg-blue-500 text-white rounded-br-md'
                    : 'bg-white text-gray-900 rounded-bl-md border border-gray-100'
                    }`}
            >
                <div className="text-sm leading-relaxed">
                    {message.text}
                </div>
                <div className={`text-xs mt-2 ${message.isOwn ? 'text-blue-100' : 'text-gray-500'
                    }`}>
                    {message.time}
                </div>
            </div>
        </div>
    );
}

export default function Demo() {
    const hapticSupported = isHapticSupported();

    return (
        <div className="max-w-2xl mx-auto py-6">
            <div className="bg-white rounded-2xl shadow-sm border border-gray-200 overflow-hidden">
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ */}
                <div className="bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-4">
                    <h2 className="text-lg font-semibold">–ß–∞—Ç —Å –ê–Ω–Ω–æ–π</h2>
                    <p className="text-blue-100 text-sm">
                        –æ–Ω–ª–∞–π–Ω
                        {hapticSupported && (
                            <span className="ml-2 text-xs bg-green-500/20 px-2 py-1 rounded-full">
                                üì≥ –•–∞–ø—Ç–∏–∫ –≤–∫–ª—é—á–µ–Ω
                            </span>
                        )}
                    </p>
                </div>

                {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
                <div className="bg-gray-50 min-h-96 max-h-[600px] overflow-y-auto">
                    {sampleMessages.map((message) => (
                        <ChatMessage key={message.id} message={message} />
                    ))}
                </div>

                {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
                <div className="bg-white border-t border-gray-200 px-4 py-3">
                    <div className="flex items-center gap-3">
                        <input
                            type="text"
                            placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                            className="flex-1 px-4 py-2 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                        />
                        <button className="bg-blue-500 text-white px-6 py-2 rounded-full hover:bg-blue-600 transition-colors">
                            –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                        </button>
                    </div>
                </div>
            </div>

            {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
            <div className="mt-8 bg-white rounded-2xl shadow-sm border border-gray-200 p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-4">
                    –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
                </h3>
                <div className="space-y-3 text-gray-600">
                    <div className="flex items-start gap-3">
                        <span className="text-2xl">üì±</span>
                        <div>
                            <strong>–ù–∞ –º–æ–±–∏–ª—å–Ω–æ–º:</strong> –î–æ–ª–≥–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        </div>
                    </div>
                    <div className="flex items-start gap-3">
                        <span className="text-2xl">üñ±Ô∏è</span>
                        <div>
                            <strong>–ù–∞ –¥–µ—Å–∫—Ç–æ–ø–µ:</strong> –ü—Ä–∞–≤—ã–π –∫–ª–∏–∫ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
                        </div>
                    </div>
                    <div className="flex items-start gap-3">
                        <span className="text-2xl">‚å®Ô∏è</span>
                        <div>
                            <strong>–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞:</strong> –ù–∞–∂–º–∏—Ç–µ Escape –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
                        </div>
                    </div>
                    <div className="flex items-start gap-3">
                        <span className="text-2xl">‚ú®</span>
                        <div>
                            <strong>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</strong> –í–∏–±—Ä–∞—Ü–∏—è, –±–ª—é—Ä —Ñ–æ–Ω–∞, –∞–Ω–∏–º–∞—Ü–∏–∏, –∞–≤—Ç–æ—Å–∫—Ä–æ–ª–ª, —ç–º–æ–¥–∑–∏-–±–∞—Ä
                        </div>
                    </div>
                    <div className="flex items-start gap-3">
                        <span className="text-2xl">üéØ</span>
                        <div>
                            <strong>–ë–µ–∑ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:</strong> –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –∏ –æ—Å—Ç–∞–µ—Ç—Å—è –≤ –ø–æ—Ç–æ–∫–µ
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
}
